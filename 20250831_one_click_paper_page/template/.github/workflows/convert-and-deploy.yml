name: Convert Paper and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  convert-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-
          
    - name: Install Python dependencies
      run: |
        uv venv
        uv pip install marker-pdf PyPDF2 docling pandoc-python-filter
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc texlive-latex-base texlive-latex-extra
        
    - name: Detect input type and convert
      id: convert
      run: |
        echo "Starting conversion process..."
        python .github/scripts/detect_and_convert.py
        echo "Conversion completed successfully"

    - name: Apply theme template
      id: theme
      run: |
        echo "Applying theme template..."
        python .github/scripts/apply_theme.py
        echo "Theme applied successfully"

    - name: Verify output
      run: |
        echo "Verifying conversion output..."
        if [ -f "./dist/index.html" ]; then
          echo "✅ index.html generated successfully"
          echo "File size: $(du -h ./dist/index.html | cut -f1)"
        else
          echo "❌ index.html not found"
          exit 1
        fi

        if [ -d "./dist/images" ]; then
          image_count=$(find ./dist/images -type f | wc -l)
          echo "✅ Images directory found with $image_count images"
        else
          echo "ℹ️ No images directory found"
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
